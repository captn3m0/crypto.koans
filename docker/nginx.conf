# Based on configuration at https://fardog.io/blog/2017/12/30/client-side-certificate-authentication-with-nginx/
# And the official nginx dockerfile: https://github.com/nginxinc/docker-nginx/blob/master/mainline/alpine/nginx.conf


user  nginx;
worker_processes  1;

error_log /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    ssl_protocols TLSv1.2;
    ssl_prefer_server_ciphers on;

    log_format  main '$remote_addr - $ssl_client_s_dn - $remote_user [$time_local] "$request" '
        '$status "$http_referer" '
        '"$http_user_agent"';

    access_log /dev/stdout main;

    sendfile        on;
    tcp_nopush     on;

    keepalive_timeout  65;

    gzip  on;

    server {
        listen 80;
        server_name crypto.koans.invalid;
        return 301 https://server.crypto.koans.invalid$request_uri;
    }

    server {
        listen 443 ssl;
        server_name server.crypto.koans.invalid;



        ssl_protocols TLSv1.1 TLSv1.2;
        # letsencrypt certificate
        ssl_certificate /etc/koans/1.crt;
        ssl_certificate_key /etc/koans/1.key;

        # client certificate
        ssl_client_certificate /etc/koans/ca.pem;
        # make verification optional, so we can display a 403 message to those
        # who fail authentication
        ssl_verify_client optional;

        location / {
            # if the client-side certificate failed to authenticate, show a 403
            # message to the client
            if ($ssl_client_verify != SUCCESS) {
                return 204;
            }

            # If client validated, send a 200 Pizza
        }
    }
}
